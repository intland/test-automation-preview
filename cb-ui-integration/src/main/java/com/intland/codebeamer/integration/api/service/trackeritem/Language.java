package com.intland.codebeamer.integration.api.service.trackeritem;

import java.util.Arrays;

public enum Language {

	AB("Abkhazian"),
	AA("Afar"),
	AF("Afrikaans"),
	AK("Akan"),
	SQ("Albanian"),
	AM("Amharic"),
	AR("Arabic"),
	AN("Aragonese"),
	HY("Armenian"),
	AS("Assamese"),
	AV("Avaric"),
	AE("Avestan"),
	AY("Aymara"),
	AZ("Azerbaijani"),
	BM("Bambara"),
	BN("Bangla"),
	BA("Bashkir"),
	EU("Basque"),
	BE("Belarusian"),
	BH("Bihari"),
	BI("Bislama"),
	BS("Bosnian"),
	BR("Breton"),
	BG("Bulgarian"),
	MY("Burmese"),
	CA("Catalan"),
	CH("Chamorro"),
	CE("Chechen"),
	ZH("Chinese"),
	CU("Church Slavic"),
	CV("Chuvash"),
	KW("Cornish"),
	CO("Corsican"),
	CR("Cree"),
	HR("Croatian"),
	CS("Czech"),
	DA("Danish"),
	DV("Divehi"),
	NL("Dutch"),
	DZ("Dzongkha"),
	EN("English"),
	EO("Esperanto"),
	ET("Estonian"),
	EE("Ewe"),
	FO("Faroese"),
	FJ("Fijian"),
	FI("Finnish"),
	FR("French"),
	FF("Fula"),
	GL("Galician"),
	LG("Ganda"),
	KA("Georgian"),
	DE("German"),
	EL("Greek"),
	GN("Guarani"),
	GU("Gujarati"),
	HT("Haitian Creole"),
	HA("Hausa"),
	IW("Hebrew"),
	HZ("Herero"),
	HI("Hindi"),
	HO("Hiri Motu"),
	HU("Hungarian"),
	IS("Icelandic"),
	IO("Ido"),
	IG("Igbo"),
	IN("Indonesian"),
	IA("Interlingua"),
	IE("Interlingue"),
	IU("Inuktitut"),
	IK("Inupiaq"),
	GA("Irish"),
	IT("Italian"),
	JA("Japanese"),
	JV("Javanese"),
	KL("Kalaallisut"),
	KN("Kannada"),
	KR("Kanuri"),
	KS("Kashmiri"),
	KK("Kazakh"),
	KM("Khmer"),
	KI("Kikuyu"),
	RW("Kinyarwanda"),
	KV("Komi"),
	KG("Kongo"),
	KO("Korean"),
	KJ("Kuanyama"),
	KU("Kurdish"),
	KY("Kyrgyz"),
	LO("Lao"),
	LA("Latin"),
	LV("Latvian"),
	LI("Limburgish"),
	LN("Lingala"),
	LT("Lithuanian"),
	LU("Luba-Katanga"),
	LB("Luxembourgish"),
	MK("Macedonian"),
	MG("Malagasy"),
	MS("Malay"),
	ML("Malayalam"),
	MT("Maltese"),
	GV("Manx"),
	MI("Māori"),
	MR("Marathi"),
	MH("Marshallese"),
	MO("Moldavian"),
	MN("Mongolian"),
	NA("Nauru"),
	NV("Navajo"),
	NG("Ndonga"),
	NE("Nepali"),
	SE("Northern Sami"),
	ND("North Ndebele"),
	NO("Norwegian"),
	NB("Norwegian Bokmål"),
	NN("Norwegian Nynorsk"),
	NY("Nyanja"),
	OC("Occitan"),
	OR("Odia"),
	OJ("Ojibwa"),
	OM("Oromo"),
	OS("Ossetic"),
	PI("Pali"),
	PS("Pashto"),
	FA("Persian"),
	PL("Polish"),
	PT("Portuguese"),
	PA("Punjabi"),
	QU("Quechua"),
	RO("Romanian"),
	RM("Romansh"),
	RN("Rundi"),
	RU("Russian"),
	SM("Samoan"),
	SG("Sango"),
	SA("Sanskrit"),
	SC("Sardinian"),
	GD("Scottish Gaelic"),
	SR("Serbian"),
	SN("Shona"),
	II("Sichuan Yi"),
	SD("Sindhi"),
	SI("Sinhala"),
	SK("Slovak"),
	SL("Slovenian"),
	SO("Somali"),
	ST("Southern Sotho"),
	NR("South Ndebele"),
	ES("Spanish"),
	SU("Sundanese"),
	SW("Swahili"),
	SS("Swati"),
	SV("Swedish"),
	TL("Tagalog"),
	TY("Tahitian"),
	TG("Tajik"),
	TA("Tamil"),
	TT("Tatar"),
	TE("Telugu"),
	TH("Thai"),
	BO("Tibetan"),
	TI("Tigrinya"),
	TO("Tongan"),
	TS("Tsonga"),
	TN("Tswana"),
	TR("Turkish"),
	TK("Turkmen"),
	TW("Twi"),
	UK("Ukrainian"),
	UR("Urdu"),
	UG("Uyghur"),
	UZ("Uzbek"),
	VE("Venda"),
	VI("Vietnamese"),
	VO("Volapük"),
	WA("Walloon"),
	CY("Welsh"),
	FY("Western Frisian"),
	WO("Wolof"),
	XH("Xhosa"),
	YI("Yiddish"),
	YO("Yoruba"),
	ZA("Zhuang"),
	ZU("Zulu");
	
	private final String name;
	
	Language(String name) {
		this.name = name;
	}

	public String getName() {
		return name;
	}

	public String getShortName() {
		return name();
	}

	public static Language findByName(String name) {
		return Arrays.stream(Language.values())
				.filter(c -> c.name.equals(name)).findAny()
				.orElseThrow(() -> new IllegalArgumentException("Language cannot be found by name: %s".formatted(name)));
	}
}
